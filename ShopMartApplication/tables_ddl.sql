CREATE TABLE CATEGORY
  (
    "CATEGORY_ID"   NUMBER(10,0) NOT NULL ENABLE,
    "CATEGORY_NAME" VARCHAR2(30 BYTE) NOT NULL ENABLE,
    "CATEGORY_TAG"  VARCHAR2(20 BYTE),
    CONSTRAINT "CATEGORY_PK" PRIMARY KEY ("CATEGORY_ID")
  );
CREATE TABLE CUSTOMER
  (
    "CUSTOMER_ID"  NUMBER(10,0) NOT NULL ENABLE,
    "FIRST_NAME"   VARCHAR2(20 BYTE) NOT NULL ENABLE,
    "LAST_NAME"    VARCHAR2(20 BYTE),
    "EMAIL_ID"     VARCHAR2(40 BYTE),
    "PHONE_NUMBER" VARCHAR2(20 BYTE) NOT NULL ENABLE,
    "ADDRESS"      VARCHAR2(100 BYTE) NOT NULL ENABLE,
    "CITY"         VARCHAR2(20 BYTE) NOT NULL ENABLE,
    CONSTRAINT "CUSTOMER_PK" PRIMARY KEY ("CUSTOMER_ID")
  );
CREATE TABLE CUSTOMER_ROLE
  (
    "CUSTOMER_ID" NUMBER(10,0) NOT NULL ENABLE,
    "USERNAME"    VARCHAR2(30 BYTE) NOT NULL ENABLE,
    "PASSWORD"    VARCHAR2(30 BYTE) NOT NULL ENABLE,
    "ROLE"        VARCHAR2(20 BYTE) NOT NULL ENABLE,
    "ENABLED"     NUMBER(1,0) NOT NULL ENABLE,
    CONSTRAINT "CUSTOMER_ROLE_PK" PRIMARY KEY ("CUSTOMER_ID"),
    CONSTRAINT "CUSTOMER_ROLE_UK1" UNIQUE ("USERNAME"),
    CONSTRAINT "CUSTOMER_ROLE_FK1" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "HR"."CUSTOMER" ("CUSTOMER_ID") ON
  DELETE CASCADE ENABLE
  );
CREATE TABLE INVOICE
  (
    "INVOICE_ID" NUMBER(10,0) NOT NULL ENABLE,
    "TOTAL_PRODUCT_PRICE" FLOAT(126) NOT NULL ENABLE,
    "DELIVERY_CHARGE" FLOAT(126),
    "TAXES" FLOAT(126),
    "TOTAL_AMOUNT" FLOAT(126) NOT NULL ENABLE,
    CONSTRAINT "INVOICE_PK1" PRIMARY KEY ("INVOICE_ID")
  );
CREATE TABLE ORDER_STATUS
  (
    "STATUS_ID"   NUMBER(10,0) NOT NULL ENABLE,
    "STATUS"      VARCHAR2(40 BYTE),
    "DESCRIPTION" VARCHAR2(100 BYTE),
    CONSTRAINT "ORDER_STATUS_PK" PRIMARY KEY ("STATUS_ID")
  );
CREATE TABLE PRODUCT
  (
    "PRODUCT_ID"   NUMBER(10,0) NOT NULL ENABLE,
    "PRODUCT_NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE,
    "PRODUCT_PRICE" FLOAT(20) NOT NULL ENABLE,
    "PRODUCT_DESCRIPTION" VARCHAR2(200 BYTE),
    "CATEGORY_ID"         NUMBER(10,0),
    "AVAILABLE_QUANTITY"  NUMBER(10,0),
    "SOLD_QUANTITY"       NUMBER(10,0),
    "PRODUCT_PIC_NAME"    VARCHAR2(40 BYTE) NOT NULL ENABLE,
    CONSTRAINT "PRODUCT_PK" PRIMARY KEY ("PRODUCT_ID"),
    CONSTRAINT "PRODUCT_FK1" FOREIGN KEY ("CATEGORY_ID") REFERENCES "HR"."CATEGORY" ("CATEGORY_ID") ON
  DELETE CASCADE ENABLE
  );
CREATE TABLE CHECKOUT
  (
    "CHECKOUT_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE,
    "CUSTOMER_ID" NUMBER,
    "PRODUCT_ID"  NUMBER,
    "QUANTITY"    NUMBER,
    CONSTRAINT "CHECKOUT_PK" PRIMARY KEY ("CHECKOUT_ID"),
    CONSTRAINT "CHECKOUT_FK1" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "HR"."CUSTOMER" ("CUSTOMER_ID") ENABLE,
    CONSTRAINT "CHECKOUT_FK2" FOREIGN KEY ("PRODUCT_ID") REFERENCES "HR"."PRODUCT" ("PRODUCT_ID") ENABLE
  );
CREATE TABLE PAYMENT
  (
    "PAYMENT_ID"   VARCHAR2(20 BYTE) NOT NULL ENABLE,
    "PAYMENT_TYPE" VARCHAR2(30 BYTE) NOT NULL ENABLE,
    "PAYEMENT_AMOUNT" FLOAT(126) NOT NULL ENABLE,
    "PAYMENT_STATUS" VARCHAR2(20 BYTE),
    CONSTRAINT "PAYMENT_PK" PRIMARY KEY ("PAYMENT_ID")
  );
CREATE TABLE ORDERS
  (
    "ORDER_ID"     NUMBER(10,0) NOT NULL ENABLE,
    "CUSTOMER_ID"  NUMBER(10,0),
    "DATE_CREATED" DATE,
    "STATUS_ID"    NUMBER(10,0),
    "INVOICE_ID"   NUMBER(10,0) NOT NULL ENABLE,
    "PAYMENT_ID"   VARCHAR2(20 BYTE),
    CONSTRAINT "CUSTOMER_ORDER_PK" PRIMARY KEY ("ORDER_ID") ENABLE,
    CONSTRAINT "CUSTOMER_ORDER_FK1" FOREIGN KEY ("CUSTOMER_ID") REFERENCES CUSTOMER ("CUSTOMER_ID") ENABLE,
    CONSTRAINT "CUSTOMER_ORDER_FK2" FOREIGN KEY ("STATUS_ID") REFERENCES ORDER_STATUS ("STATUS_ID") ENABLE,
    CONSTRAINT "CUSTOMER_ORDER_FK3" FOREIGN KEY ("INVOICE_ID") REFERENCES INVOICE ("INVOICE_ID") ENABLE,
    CONSTRAINT "ORDERS_FK1" FOREIGN KEY ("PAYMENT_ID") REFERENCES PAYMENT ("PAYMENT_ID") ENABLE
  );
CREATE TABLE ORDER_DETAILS
  (
    "ORDER_ID"   NUMBER(10,0),
    "PRODUCT_ID" NUMBER(10,0),
    "QUANTITY"   NUMBER(10,0),
    CONSTRAINT "ORDER_DETAILS_FK1" FOREIGN KEY ("PRODUCT_ID") REFERENCES "HR"."PRODUCT" ("PRODUCT_ID") ENABLE,
    CONSTRAINT "ORDER_DETAILS_FK2" FOREIGN KEY ("ORDER_ID") REFERENCES "HR"."ORDERS" ("ORDER_ID") ENABLE
  );
CREATE SEQUENCE SHOPMART_CUSTOMER_SEQ START WITH 100006 INCREMENT BY 1 MINVALUE 100001 NOCACHE NOCYCLE ORDER ;
CREATE SEQUENCE SHOPMART_CATEGORY_SEQ START WITH 10012 INCREMENT BY 1 MINVALUE 10001 NOCACHE NOCYCLE ORDER ;
CREATE SEQUENCE SHOPMART_PRODUCT_SEQ START WITH 1000101 INCREMENT BY 1 MINVALUE 1000001 NOCACHE NOCYCLE ORDER ;
CREATE SEQUENCE SHOPMART_ORDERS_SEQ START WITH 10000001 INCREMENT BY 1 MINVALUE 10000001 NOCACHE NOCYCLE ORDER ;
CREATE SEQUENCE SHOPMART_INVOICE_SEQ START WITH 50000001 INCREMENT BY 1 MINVALUE 50000001 NOCACHE NOCYCLE ORDER ;
CREATE SEQUENCE SHOPMART_PAYMENT_SEQ START WITH 80000001 INCREMENT BY 1 MINVALUE 80000001 NOCACHE NOCYCLE ORDER ;

COMMIT;